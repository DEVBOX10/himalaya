[example]
# The current account will be used by default for all other commands.
default = true

# The display-name and the email are used to build the full email
# address: "My example account" <example@localhost>
display-name = "My example account"
email = "example@localhost"

# The signature can be a string or a path to a file.
signature = "Regards,"
signature-delim = "-- \n"

# Enable the synchronization for this account. Running the command
# `account sync example` will synchronize all folders and all emails
# to a local Maildir at `$XDG_DATA_HOME/himalaya/example`.
sync.enable = true

# Override the default Maildir path for synchronization.
sync.dir = "/tmp/himalaya-sync-example"

# Define main folder aliases
folder.alias.inbox = "INBOX"
folder.alias.sent = "Sent"
folder.alias.drafts = "Drafts"
folder.alias.trash = "Trash"

# Also define custom folder aliases
folder.alias.prev-year = "Archives/2023"

# Default backend used for all the features like adding folders,
# listing envelopes or copying messages.
backend = "imap"

envelope.list.page-size = 10
envelope.list.datetime-fmt = "%F %R%:z"

# Date are converted to the user's local timezone.
envelope.list.datetime-local-tz = true

# Override the backend used for listing envelopes.
envelope.list.backend = "imap"

# Override the backend used for sending messages.
message.send.backend = "smtp"

# IMAP config
imap.host = "localhost"
imap.port = 3143
imap.login = "example@localhost"
imap.ssl = false
imap.starttls = false
imap.auth = "passwd" # or oauth2

# Get password from the raw string (not safe)
# imap.passwd.raw = "password"

# Get password from a shell command
imap.passwd.cmd = ["echo example-imap-password", "cat"]

# Get password from your system keyring using secret service
# Keyring secrets can be (re)set with the command `account configure example`
# imap.passwd.keyring = "example-imap-password"

# SMTP config
smtp.host = "localhost"
smtp.port = 3025
smtp.login = "example@localhost"
smtp.ssl = false
smtp.starttls = false
smtp.auth = "passwd"
smtp.passwd.raw = "password"

# PGP needs to be enabled with one of those cargo feature:
# pgp-commands, pgp-gpg or pgp-native
# pgp.backend = "gpg"
