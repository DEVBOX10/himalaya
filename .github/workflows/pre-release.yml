name: pre-release

on:
  push:

jobs:
  pre-release:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        include:
          - target: aarch64-apple-darwin
            artifact: macos.aarch64
            os: macos-14
          - target: aarch64-unknown-linux-musl
            artifact: linux.aarch64
            os: ubuntu-latest
          - target: armv6l-unknown-linux-musleabihf
            artifact: linux.armv6l
            os: ubuntu-latest
          - target: armv7l-unknown-linux-musleabihf
            artifact: linux.armv7l
            os: ubuntu-latest
          - target: i686-unknown-linux-musl
            artifact: linux.i686
            os: ubuntu-latest
          - target: i686-w64-mingw32
            artifact: windows.i686
            os: ubuntu-latest
          - target: x86_64-apple-darwin
            artifact: macos.x86_64
            os: macos-13
          - target: x86_64-unknown-linux-musl
            artifact: linux.x86_64
            os: ubuntu-latest
          - target: x86_64-w64-mingw32
            artifact: windows.x86_64
            os: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Install Nix
        uses: cachix/install-nix-action@v27
        with:
          nix_path: nixpkgs=channel:nixos-24.05
          enable_kvm: true
      - name: Cache Nix store
        uses: cachix/cachix-action@v15
        with:
          name: soywod
          authToken: '${{ secrets.CACHIX_AUTH_TOKEN }}'
          extraPullNames: nix-community
      - name: Build release
        run: |
          nix-build --argstr target ${{ matrix.target }}
      - name: Upload release artifacts
        uses: actions/upload-artifact@v4
        with:
          name: "himalaya.${{ matrix.artifact }}"
          path: |
            result/bin/himalaya*
            result/bin/share
