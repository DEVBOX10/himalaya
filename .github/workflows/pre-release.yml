name: pre-release

on:
  push:

jobs:
  pre-release:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        include:
          - os: ubuntu-latest
            target:
          - os: ubuntu-latest
            target: aarch64-unknown-linux-musl
          - os: ubuntu-latest
            target: x86_64-pc-windows-gnu
          - os: macos-13
            target:
          - os: macos-14
            target:
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Install Nix
        uses: cachix/install-nix-action@v27
        with:
          nix_path: nixpkgs=channel:nixos-24.05
          enable_kvm: true
          # extra_nix_config: "experimental-features = nix-command flakes"
      - name: Cache Nix store
        uses: cachix/cachix-action@v15
        with:
          name: soywod
          authToken: '${{ secrets.CACHIX_AUTH_TOKEN }}'
          extraPullNames: nix-community
      - name: Build release
        if: ${{ matrix.target }} != ""
        run: |
          nix-build --arg crossSystem '{ config = "${{ matrix.target }}"; }'
      - name: Build release
        if: ${{ matrix.target }} == ""
        run: |
          nix-build
      - name: Upload release artifacts
        uses: actions/upload-artifact@v4
        with:
          name: "himalaya.${{ matrix.target }}"
          path: |
            result/bin/himalaya*
            result/bin/share
